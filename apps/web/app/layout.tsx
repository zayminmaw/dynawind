import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { generateSemanticColorCSSVariables, Theme, wrapInRoot } from "dynawind";
import ClientSideThemeProvider from "./clientSideThemeProvider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getTheme(): Promise<Theme> {
  const res = await fetch(
    "https://mocki.io/v1/b26cb236-10c1-4976-b63b-5a1a38de138e",
    {
      cache: "no-store",
    }
  );
  return res.json();
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const theme = await getTheme();
  const semanticColorCssVars = generateSemanticColorCSSVariables(theme);

  return (
    <html lang="en">
      <head>
        <style
          dangerouslySetInnerHTML={{
            __html: wrapInRoot([semanticColorCssVars]),
          }}
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ClientSideThemeProvider theme={theme}>
          {children}
        </ClientSideThemeProvider>
      </body>
    </html>
  );
}
